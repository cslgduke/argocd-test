apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    chart: {{ .Chart.Name }}
    app: {{ .Release.Name }}
  name:  {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
        env:
        - name: CS_USER
          valueFrom:
            secretKeyRef:
              name: cs-kafka
              key: CS_USER
        - name: CS_HOST
          valueFrom:
            secretKeyRef:
              name: cs-kafka
              key: CS_HOST
        - name: CREDENTIAL_ACCESS_TOKEN_URL
          valueFrom:
            secretKeyRef:
              name: cornerstone-btp-credstore
              key: oauth_token_url
        - name: CREDENTIAL_STORE_URL
          valueFrom:
            secretKeyRef:
              name: cornerstone-btp-credstore
              key: url
        - name: CREDENTIAL_USER
          valueFrom:
            secretKeyRef:
              name: cornerstone-btp-credstore
              key: username
        - name: CREDENTIAL_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: cornerstone-btp-credstore
              key: private_key
        - name: CREDENTIAL_ENCRYPTION
          valueFrom:
            secretKeyRef:
              name: cornerstone-btp-credstore
              key: encryption

        volumeMounts:
        - name: kafka
          mountPath: /etc/cs-kafka

      volumes:
        - name: kafka
          secret:
            secretName: cs-kafka
status: {}
